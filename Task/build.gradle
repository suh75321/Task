plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.teamsparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//JPA사용을 위해 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //데이터베이스 추가. 이거 안하면 안됨
    implementation("com.h2database:h2")
// 스웨거 사용을 위한 추가
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")


// 데이터베이스 MySQL 사용 위해 추가
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Security를 사용하기 위해 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

}

tasks.named('test') {
    useJUnitPlatform()
}
